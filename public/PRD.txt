# 嵌入式自动化测试系统 - 产品需求文档

## 1. 产品概述

嵌入式自动化测试系统是一个专门针对嵌入式设备和系统的综合性测试平台，旨在提高嵌入式产品的测试效率和质量保证。系统支持硬件在环测试、固件自动化测试、性能基准测试等多种测试场景，帮助嵌入式开发团队快速发现和定位问题。

该系统主要解决嵌入式开发中测试周期长、人工测试易出错、测试覆盖率不足等问题，为嵌入式产品的快速迭代和质量保证提供强有力的支撑。

## 2. 核心功能

### 2.1 用户角色

| 角色    | 注册方式  | 核心权限                                   |
| ----- | ----- | -------------------------------------- |
| 测试工程师 | 邮箱注册  | 管理和维护测试设备，获取预发布固件，创建和执行测试集，管理测试报告      |
| 开发工程师 | 邮箱注册  | 上传功能点测试固件，创建和执行测试集，查看测试报告              |
| 项目经理  | 管理员邀请 | 在开发工程师的权限基础上增加：上传预发布固件，查看项目测试概览，管理团队成员 |
| 系统管理员 | 系统预设  | 管理所有用户，配置系统参数                          |

### 2.2 功能模块

我们的嵌入式自动化测试系统包含以下主要页面：

1. **仪表板页面**：测试概览、设备状态监控、测试进度跟踪
2. **测试管理页面**：测试用例管理、测试套件配置
3. **设备管理页面**：测试设备注册、设备状态监控、设备配置管理
4. **固件管理页面**：固件版本管理、固件上传下载、版本对比分析
5. **测试执行页面**：测试任务启动、实时监控、日志查看
6. **报告分析页面**：测试报告生成、数据分析、趋势图表
7. **系统配置页面**：用户管理、权限配置、系统参数设置

### 2.3 页面详情

| 页面名称   | 模块名称   | 功能描述                       |
| ------ | ------ | -------------------------- |
| 仪表板页面  | 测试概览   | 显示当前测试状态、成功率统计、设备使用情况等关键指标 |
| 仪表板页面  | 设备状态监控 | 实时显示所有测试设备的在线状态、资源使用情况     |
| 仪表板页面  | 测试进度跟踪 | 展示正在进行的测试任务进度和预计完成时间       |
| 测试管理页面 | 测试用例管理 | 创建、编辑、删除测试用例，支持脚本化和图形化编辑   |
| 测试管理页面 | 测试套件配置 | 组织测试用例为套件，配置执行顺序和依赖关系      |
| 测试管理页面 | 测试计划制定 | 制定测试计划，安排测试时间和资源分配         |
| 设备管理页面 | 设备注册   | 添加新的测试设备，配置设备参数和连接信息       |
| 设备管理页面 | 设备监控   | 监控设备健康状态，查看设备日志和性能指标       |
| 设备管理页面 | 设备配置   | 管理设备配置文件，支持远程配置更新          |
| 固件管理页面 | 版本管理   | 管理固件版本，支持版本标签和发布说明         |
| 固件管理页面 | 固件上传   | 上传新固件版本，自动校验和版本检测          |
| 固件管理页面 | 版本对比   | 对比不同固件版本的差异和测试结果           |
| 测试执行页面 | 任务启动   | 启动测试任务，选择测试套件和目标设备         |
| 测试执行页面 | 实时监控   | 实时查看测试执行状态和中间结果            |
| 测试执行页面 | 日志查看   | 查看详细的测试执行日志和错误信息           |
| 报告分析页面 | 报告生成   | 生成详细的测试报告，支持多种格式导出         |
| 报告分析页面 | 数据分析   | 分析测试数据，识别问题模式和性能趋势         |
| 报告分析页面 | 趋势图表   | 展示测试结果的历史趋势和统计图表           |
| 系统配置页面 | 用户管理   | 管理用户账户，分配角色和权限             |
| 系统配置页面 | 系统参数   | 配置系统全局参数和测试环境设置            |

### 2.4 测试管理页面详细设计

#### 2.4.1 页面整体布局

测试管理页面采用三栏式布局设计：

* **左侧导航栏**（200px）：功能模块切换，包括测试用例管理、测试套件配置、测试计划制定

* **中间主内容区**（自适应）：当前选中模块的详细内容展示和操作界面

* **右侧信息面板**（300px）：显示选中项的详细信息、操作历史、相关统计等

#### 2.4.2 测试用例管理详细功能

**基础功能：**

* **创建和编辑测试单元**：支持表单创建和模板导入两种方式

  * 表单字段：单元名称、描述、单元类型（目前支持两种：命令发送单元和电流测量单元）
  * 命令发送单元还应该包含的字段：发送命令的内容，预期接收的回复内容和超时等待时间
  * 电流测量单元还应该包含的字段：电流测量时间
  * 测试单元编辑：支持修改除单元类型之外的所有字段内容，支持删除测试单元，但在删除之前会检查是否存在依赖
  * 版本发布和共享：支持创建测试单元的发布版本以共享给所有人使用，发布时需要补充的字段：所属功能模块（系统、多媒体、低功耗）、用于发布的简要说明，发布时会自动创建版本号v1、v2、v3并带上创建人和时间；

- **创建和编辑测试用例**：需要同时通过表单和可视化界面创建测试用例

  * 表单字段：用例名称、描述、测试类型（功能、性能、稳定性）

  * 测试用例由一组串行执行的测试单元构成，第一个单元（初始化单元）和最后一个单元（结束单元）目前是固定的

  * 界面上部是一个搜索框，用于检索可以获取到的测试单元（未检索时自动显示最近常用的测试单元，这里的测试单元只显示名称，需要点击/滑入才能看到详细信息），可通过选中测试单元以将其添加到测试用例中

  * 界面中包含一个测试用例预览界面，可以通过点击测试单元对其进行增量编辑，可以拖动其位置来调整单元间的执行顺序，当然也可以对其进行删除

  * 初始化单元定义了测试用例在初始化阶段的行为，可以包括一串连续发送的命令或者硬件上下电操作

  * 结束单元定义了测试用例在结束阶段的行为，包括配置测试用例的失败处理策略以及收集各测试单元的测试结果和设备日志等

  * 等待单元：另一种特殊的测试单元，用于在两个测试单元之间增加延时，可以直接在单元名称上显示等待时间

  * 测试用例发布和共享

#### 2.4.3 测试套件配置详细流程

**创建测试套件：**

1. **基本信息配置**：

   * 套件名称、描述、创建者信息

   * 执行策略：串行/并行执行、失败处理策略

   * 环境要求：目标设备类型、固件版本要求

2. **测试用例选择**：

   * 左侧用例库：树形结构展示所有可用测试用例

   * 中间操作区：拖拽添加用例到套件中

   * 右侧套件预览：显示当前套件包含的用例列表

3. **执行顺序配置**：

   * 可视化排序：支持拖拽调整执行顺序

   * 依赖关系设置：配置用例间的前置条件和依赖关系

   * 条件执行：设置基于前置用例结果的条件执行逻辑

4. **参数和环境配置**：

   * 全局参数：设置套件级别的公共参数

   * 用例参数覆盖：为特定用例设置专用参数

   * 环境变量：配置测试执行时的环境变量

**套件管理功能：**

* **套件复制和模板化**：支持基于现有套件创建新套件

* **套件版本管理**：记录套件的修改历史和版本信息

* **套件分享**：支持套件的导出和团队间分享

#### 2.4.4 权限控制体现

**基于角色的功能权限：**

* **所有用户的基本权限**：

  * 可创建、编辑、发布、删除自己创建的测试单元、测试用例、测试套件
* **开发工程师**：

  * 可上传功能点测试固件，并在选中的测试设备上运行指定测试套件（可能需要排队）
  * 可以查看由自己发起的测试的测试结果报告

- **测试工程师**：

  * 可以创建和管理测试设备，包括管理测试设备下的所有待测任务

  * 可以查看所有的测试任务，访问对应的测试结果，修改测试报告（但是会留下记录）

- **项目经理**：

  * 可以上传预发布固件，并在选中的测试设备上运行指定测试套件
  * 可查看所有人的测试统计和分析报告

- **系统管理员**：

  * 拥有所有功能的完全访问权限

  * 可管理系统级别的测试模板和配置

**数据权限控制：**

* **个人数据**：用户只能访问自己创建的私有测试用例

* **公共数据**：所有用户都可以访问的公共测试模板和示例

#### 2.4.5 与其他页面的数据交互

**与设备管理页面的交互：**

* 测试计划制定时需要获取可用设备列表

* 测试套件配置时需要验证设备兼容性

* 设备状态变化会影响测试计划的执行

**与固件管理页面的交互：**

* 测试用例创建时需要指定适用的固件版本

* 测试套件需要关联特定的固件类型

* 固件更新会触发相关测试用例的重新验证

**与测试执行页面的交互：**

* 测试计划和套件会传递给执行页面

* 执行结果会反馈到测试管理页面更新状态

* 执行过程中的参数调整会同步到用例定义

**与报告分析页面的交互：**

* 测试用例的执行历史数据用于生成分析报告

* 测试计划的完成情况用于项目进度分析

* 用例的成功率统计用于质量趋势分析

**数据流向图：**

```mermaid
graph LR
  A[测试管理页面] --> B[测试执行页面]
  A --> C[设备管理页面]
  A --> D[固件管理页面]
  B --> E[报告分析页面]
  C --> A
  D --> A
  E --> A
```

## 3. 核心流程

### 测试工程师流程

测试工程师登录系统后，首先在测试管理页面创建或编辑测试用例，然后组织测试用例为测试套件。接下来在测试执行页面选择目标设备和固件版本，启动测试任务。测试执行过程中可以实时监控测试状态，测试完成后在报告分析页面查看详细结果。

### 开发工程师流程

开发工程师主要通过固件管理页面上传新的固件版本，然后在仪表板页面查看相关的测试结果。当测试发现问题时，可以在报告分析页面查看详细的错误信息和日志。

### 项目经理流程

项目经理通过仪表板页面获得项目整体测试状况的概览，在测试管理页面制定测试计划和策略，通过报告分析页面了解产品质量趋势。

```mermaid
graph TD
  A[仪表板页面] --> B[测试管理页面]
  A --> C[设备管理页面]
  A --> D[固件管理页面]
  B --> E[测试执行页面]
  E --> F[报告分析页面]
  C --> E
  D --> E
  A --> G[系统配置页面]
```

## 4. 用户界面设计

### 4.1 设计风格

* **主色调**：深蓝色 (#1E3A8A) 作为主色，浅蓝色 (#3B82F6) 作为辅助色

* **按钮样式**：圆角矩形按钮，支持悬停和点击状态变化

* **字体**：主要使用 Microsoft YaHei 14px，标题使用 16px 加粗

* **布局风格**：左侧导航栏 + 主内容区域，采用卡片式布局展示信息

* **图标风格**：使用线性图标风格，配合适当的颜色区分不同状态

### 4.2 页面设计概览

| 页面名称   | 模块名称   | UI元素                              |
| ------ | ------ | --------------------------------- |
| 仪表板页面  | 测试概览   | 使用仪表盘和进度条展示测试统计数据，采用绿色表示成功，红色表示失败 |
| 仪表板页面  | 设备状态监控 | 设备列表采用网格布局，每个设备卡片显示状态指示灯和关键信息     |
| 测试管理页面 | 测试用例管理 | 表格形式展示测试用例列表，支持搜索和筛选功能            |
| 设备管理页面 | 设备注册   | 表单式布局，包含设备类型选择、连接配置等输入项           |
| 测试执行页面 | 实时监控   | 使用进度条和状态标签实时显示测试进度，日志区域采用等宽字体     |
| 报告分析页面 | 数据分析   | 使用图表库展示测试数据，支持柱状图、折线图等多种图表类型      |

### 4.3 响应式设计

系统采用桌面优先的设计理念，主要面向桌面端用户。同时考虑平板设备的适配，在较小屏幕上会自动调整布局和隐藏次要信息。支持触摸操作优化，方便在触屏设备上使用。
